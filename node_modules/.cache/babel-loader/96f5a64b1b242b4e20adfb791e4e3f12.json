{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE DATA\\\\diamond\\\\diamond_admin_frontend\\\\src\\\\pages\\\\AuthenticationFlow\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport CustomInput from \"../../components/Custom/TextInput\";\nimport CustomButton from \"../../components/Custom/Button\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { AuthLogin, GetAllSections } from \"../../services/AuthService\";\nimport { STORAGEKEY } from \"../../Constant\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Spinner from \"../../components/Common/CustomLoader/loader\";\nimport { constants as ERROR_CONST } from \"../../Constant/Error&Success\";\nimport { constants as PLACEHOLDER_CONST } from \"../../Constant/Placeholder\";\nimport { constants as PATH } from \"../../Constant/ComponentPath\"; // import logodark from \"../../assets/images/logo-dark.png\";\n\nconst Login = props => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const startLoading = () => {\n    setIsLoading(true);\n  };\n\n  const stopLoading = () => {\n    setIsLoading(false);\n  };\n\n  const LogInSchema = Yup.object().shape({\n    email: Yup.string().trim().email(ERROR_CONST.EMAIL).required(ERROR_CONST.EMAIL_REQ),\n    password: Yup.string().required(ERROR_CONST.PASS_REQ).min(8, ERROR_CONST.ERROR_2)\n  });\n\n  const handleSubmit = (values, {\n    resetForm\n  }) => {\n    const data = {\n      email: values.email.trim(),\n      password: values.password.trim()\n    };\n    startLoading();\n    AuthLogin(data).then(res => {\n      const data = res && res.data && res.data.data && res.data.data.data;\n      localStorage.setItem(STORAGEKEY.ACCESSTOKEN, data.accessToken);\n      GetAllSections(`?page=1&limit=1`).then(res => {\n        const data = res && res.data && res.data.data && res.data.data.data;\n        props.history.push({\n          pathname: PATH.HOME,\n          state: {\n            section_type: data[0].section_type,\n            dynamic_data: data[0].dynamic_data,\n            section_id: data[0].home_section_id\n          }\n        });\n      }).catch(err => {}); // props.history.push(PATH.HOME);\n\n      stopLoading();\n      resetForm();\n    }).catch(err => {\n      const errorMessage = err.response.data.error.message;\n\n      if (errorMessage === \"err_1\") {\n        NotificationManager.error(ERROR_CONST.ERROR_1, \"\", 1000);\n      } else if (errorMessage === \"err_2\") {\n        NotificationManager.error(ERROR_CONST.ERROR_2, \"\", 1000);\n      } else if (errorMessage === \"err_3\") {\n        NotificationManager.error(ERROR_CONST.ERROR_3, \"\", 1000);\n      } else if (errorMessage === \"err_4\") {\n        NotificationManager.error(ERROR_CONST.ERROR_4, \"\", 1000);\n      } else if (errorMessage === \"err_5\") {\n        NotificationManager.error(ERROR_CONST.ERROR_5, \"\", 1000);\n      } else {\n        NotificationManager.error(ERROR_CONST.SOMETHING_WRONG, \"\", 1000);\n      }\n\n      stopLoading();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authentication-page-content p-4 d-flex align-items-center min-vh-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"LOGO HERE\")), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-size-20 p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }, \"Welcome Back !\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 mt-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LogInSchema,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 27\n    }\n  }, ({\n    errors,\n    touched,\n    values,\n    handleChange\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"text\",\n    values: values,\n    placeholder: PLACEHOLDER_CONST.EMAIL,\n    name: \"email\",\n    handleChange: handleChange,\n    touched: touched,\n    errors: errors,\n    iconName: \"ri-user-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"password\",\n    values: values,\n    placeholder: PLACEHOLDER_CONST.PASSWORD,\n    name: \"password\",\n    handleChange: handleChange,\n    touched: touched,\n    errors: errors,\n    isPassword: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    name: \"btn\",\n    className: \"custombtn\",\n    onSubmit: values => handleSubmit(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 35\n    }\n  }, \"Log In\"))))))))))), /*#__PURE__*/React.createElement(Col, {\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authentication-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/pages/AuthenticationFlow/Login.js"],"names":["React","useState","Row","Col","Container","CustomInput","CustomButton","Formik","Form","Yup","AuthLogin","GetAllSections","STORAGEKEY","NotificationContainer","NotificationManager","Spinner","constants","ERROR_CONST","PLACEHOLDER_CONST","PATH","Login","props","isLoading","setIsLoading","startLoading","stopLoading","LogInSchema","object","shape","email","string","trim","EMAIL","required","EMAIL_REQ","password","PASS_REQ","min","ERROR_2","handleSubmit","values","resetForm","data","then","res","localStorage","setItem","ACCESSTOKEN","accessToken","history","push","pathname","HOME","state","section_type","dynamic_data","section_id","home_section_id","catch","err","errorMessage","response","error","message","ERROR_1","ERROR_3","ERROR_4","ERROR_5","SOMETHING_WRONG","errors","touched","handleChange","PASSWORD"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport CustomInput from \"../../components/Custom/TextInput\";\r\nimport CustomButton from \"../../components/Custom/Button\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthLogin, GetAllSections } from \"../../services/AuthService\";\r\nimport { STORAGEKEY } from \"../../Constant\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Spinner from \"../../components/Common/CustomLoader/loader\";\r\nimport { constants as ERROR_CONST } from \"../../Constant/Error&Success\";\r\nimport { constants as PLACEHOLDER_CONST } from \"../../Constant/Placeholder\";\r\nimport { constants as PATH } from \"../../Constant/ComponentPath\";\r\n// import logodark from \"../../assets/images/logo-dark.png\";\r\n\r\nconst Login = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const startLoading = () => {\r\n    setIsLoading(true);\r\n  };\r\n\r\n  const stopLoading = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const LogInSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .trim()\r\n      .email(ERROR_CONST.EMAIL)\r\n      .required(ERROR_CONST.EMAIL_REQ),\r\n    password: Yup.string()\r\n      .required(ERROR_CONST.PASS_REQ)\r\n      .min(8, ERROR_CONST.ERROR_2),\r\n  });\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    const data = {\r\n      email: values.email.trim(),\r\n      password: values.password.trim(),\r\n    };\r\n\r\n    startLoading();\r\n\r\n    AuthLogin(data)\r\n      .then((res) => {\r\n        const data = res && res.data && res.data.data && res.data.data.data;\r\n        localStorage.setItem(STORAGEKEY.ACCESSTOKEN, data.accessToken);\r\n        GetAllSections(`?page=1&limit=1`)\r\n          .then((res) => {\r\n            const data = res && res.data && res.data.data && res.data.data.data;\r\n            props.history.push({\r\n              pathname: PATH.HOME,\r\n              state: {\r\n                section_type: data[0].section_type,\r\n                dynamic_data: data[0].dynamic_data,\r\n                section_id: data[0].home_section_id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => {});\r\n        // props.history.push(PATH.HOME);\r\n        stopLoading();\r\n        resetForm();\r\n      })\r\n      .catch((err) => {\r\n        const errorMessage = err.response.data.error.message;\r\n        if (errorMessage === \"err_1\") {\r\n          NotificationManager.error(ERROR_CONST.ERROR_1, \"\", 1000);\r\n        } else if (errorMessage === \"err_2\") {\r\n          NotificationManager.error(ERROR_CONST.ERROR_2, \"\", 1000);\r\n        } else if (errorMessage === \"err_3\") {\r\n          NotificationManager.error(ERROR_CONST.ERROR_3, \"\", 1000);\r\n        } else if (errorMessage === \"err_4\") {\r\n          NotificationManager.error(ERROR_CONST.ERROR_4, \"\", 1000);\r\n        } else if (errorMessage === \"err_5\") {\r\n          NotificationManager.error(ERROR_CONST.ERROR_5, \"\", 1000);\r\n        } else {\r\n          NotificationManager.error(ERROR_CONST.SOMETHING_WRONG, \"\", 1000);\r\n        }\r\n        stopLoading();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Container fluid className=\"p-0\">\r\n          <Row className=\"no-gutters\">\r\n            <Col lg={4}>\r\n              {isLoading && <Spinner />}\r\n              <div className=\"authentication-page-content p-4 d-flex align-items-center min-vh-100\">\r\n                <div className=\"w-100\">\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col lg={9}>\r\n                      <div>\r\n                        <div className=\"text-center\">\r\n                          <div>\r\n                            <div>LOGO HERE</div>\r\n                            {/* <img src={logodark} height=\"20\" alt=\"LOGO HERE\" /> */}\r\n                          </div>\r\n\r\n                          <h4 className=\"font-size-20 p-2\">Welcome Back !</h4>\r\n                        </div>\r\n\r\n                        <div className=\"p-2 mt-3 text-center\">\r\n                          <Formik\r\n                            initialValues={{ email: \"\", password: \"\" }}\r\n                            validationSchema={LogInSchema}\r\n                            onSubmit={handleSubmit}\r\n                          >\r\n                            {({ errors, touched, values, handleChange }) => (\r\n                              <Form>\r\n                                <CustomInput\r\n                                  type=\"text\"\r\n                                  values={values}\r\n                                  placeholder={PLACEHOLDER_CONST.EMAIL}\r\n                                  name=\"email\"\r\n                                  handleChange={handleChange}\r\n                                  touched={touched}\r\n                                  errors={errors}\r\n                                  iconName={\"ri-user-fill\"}\r\n                                />\r\n\r\n                                <CustomInput\r\n                                  type=\"password\"\r\n                                  values={values}\r\n                                  placeholder={PLACEHOLDER_CONST.PASSWORD}\r\n                                  name=\"password\"\r\n                                  handleChange={handleChange}\r\n                                  touched={touched}\r\n                                  errors={errors}\r\n                                  isPassword\r\n                                />\r\n\r\n                                <div className=\"mt-4 text-center\">\r\n                                  <CustomButton\r\n                                    type=\"submit\"\r\n                                    name=\"btn\"\r\n                                    className=\"custombtn\"\r\n                                    onSubmit={(values) => handleSubmit(values)}\r\n                                  >\r\n                                    Log In\r\n                                  </CustomButton>\r\n                                </div>\r\n                              </Form>\r\n                            )}\r\n                          </Formik>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col lg={8}>\r\n              <div className=\"authentication-bg\"></div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <NotificationContainer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
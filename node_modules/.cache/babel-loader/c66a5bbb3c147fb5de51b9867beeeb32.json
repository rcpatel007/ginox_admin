{"ast":null,"code":"import axios from 'axios';\nimport { DEV_URL } from '../api/url';\nimport { STORAGEKEY } from '../Constant';\nexport const Bearer = 'Bearer ';\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401 || error.response.status === 403) {\n    localStorage.clear();\n    window.location.assign('/auth/login');\n  } else {\n    return Promise.reject(error);\n  }\n});\nexport default {\n  post: (url, paydata) => {\n    return axios.post(DEV_URL + url, paydata);\n  },\n  postWithToken: (url, data) => {\n    return axios({\n      method: 'post',\n      data: data,\n      url: DEV_URL + url,\n      headers: {\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n      }\n    });\n  },\n  // postWithParams:(url,params)=>{\n  //   return axios({\n  //     method:\"post\",\n  //     params,\n  //     url:DEV_URL + url,\n  //     headers:{\n  //       authorization:\n  //         Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n  //     }\n  //   })\n  // },\n  get: url => {\n    return axios.get(DEV_URL + url);\n  },\n  getWithToken: url => {\n    return axios({\n      method: 'get',\n      url: DEV_URL + url,\n      headers: {\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n      }\n    });\n  },\n  getWithParams: (url, params) => {\n    return axios({\n      method: 'get',\n      params,\n      url: DEV_URL + url,\n      headers: {\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n      }\n    });\n  },\n  putWithToken: (url, data) => {\n    return axios({\n      method: 'put',\n      data: data,\n      url: DEV_URL + url,\n      headers: {\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n      }\n    });\n  },\n  delete: (url, paydata) => {\n    return axios.delete(DEV_URL + url, paydata);\n  },\n  deleteWithToken: (url, params) => {\n    return axios({\n      method: 'delete',\n      params,\n      url: DEV_URL + url,\n      headers: {\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/api/api.js"],"names":["axios","DEV_URL","STORAGEKEY","Bearer","interceptors","response","use","error","status","localStorage","clear","window","location","assign","Promise","reject","post","url","paydata","postWithToken","data","method","headers","authorization","getItem","ACCESSTOKEN","get","getWithToken","getWithParams","params","putWithToken","delete","deleteWithToken"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { DEV_URL } from '../api/url';\r\nimport { STORAGEKEY } from '../Constant';\r\nexport const Bearer = 'Bearer ';\r\n\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.response.status === 401 || error.response.status === 403) {\r\n      localStorage.clear();\r\n      window.location.assign('/auth/login');\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport default {\r\n  post: (url, paydata) => {\r\n    return axios.post(DEV_URL + url, paydata);\r\n  },\r\n\r\n  postWithToken: (url, data) => {\r\n    return axios({\r\n      method: 'post',\r\n      data: data,\r\n      url: DEV_URL + url,\r\n      headers: {\r\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN),\r\n      },\r\n    });\r\n  },\r\n\r\n  // postWithParams:(url,params)=>{\r\n  //   return axios({\r\n  //     method:\"post\",\r\n  //     params,\r\n  //     url:DEV_URL + url,\r\n  //     headers:{\r\n  //       authorization:\r\n  //         Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN)\r\n  //     }\r\n  //   })\r\n  // },\r\n\r\n  get: (url) => {\r\n    return axios.get(DEV_URL + url);\r\n  },\r\n\r\n  getWithToken: (url) => {\r\n    return axios({\r\n      method: 'get',\r\n      url: DEV_URL + url,\r\n      headers: {\r\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN),\r\n      },\r\n    });\r\n  },\r\n\r\n  getWithParams: (url, params) => {\r\n    return axios({\r\n      method: 'get',\r\n      params,\r\n      url: DEV_URL + url,\r\n      headers: {\r\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN),\r\n      },\r\n    });\r\n  },\r\n\r\n  putWithToken: (url, data) => {\r\n    return axios({\r\n      method: 'put',\r\n      data: data,\r\n      url: DEV_URL + url,\r\n      headers: {\r\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN),\r\n      },\r\n    });\r\n  },\r\n\r\n  delete: (url, paydata) => {\r\n    return axios.delete(DEV_URL + url, paydata);\r\n  },\r\n\r\n  deleteWithToken: (url, params) => {\r\n    return axios({\r\n      method: 'delete',\r\n      params,\r\n      url: DEV_URL + url,\r\n      headers: {\r\n        authorization: Bearer + localStorage.getItem(STORAGEKEY.ACCESSTOKEN),\r\n      },\r\n    });\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
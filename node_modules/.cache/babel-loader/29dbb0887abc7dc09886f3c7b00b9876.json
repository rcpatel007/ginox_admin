{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE DATA\\\\diamond\\\\diamond_admin_frontend\\\\src\\\\routes\\\\route.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { STORAGEKEY } from '../Constant/index';\nimport { constants as PATH } from '../Constant/ComponentPath';\n\nconst AppRoute = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    if (isAuthProtected && !localStorage.getItem(STORAGEKEY.ACCESSTOKEN)) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: PATH.LOGIN,\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    })));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}));\n\nexport default AppRoute;","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/routes/route.js"],"names":["React","Route","Redirect","STORAGEKEY","constants","PATH","AppRoute","component","Component","layout","Layout","isAuthProtected","rest","props","localStorage","getItem","ACCESSTOKEN","pathname","LOGIN","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAS,IAAIC,IAAtB,QAAkC,2BAAlC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SAAS,EAAEC,SADK;AAEhBC,EAAAA,MAAM,EAAEC,MAFQ;AAGhBC,EAAAA,eAHgB;AAIhB,KAAGC;AAJa,CAAD,kBAMf,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,QAAIF,eAAe,IAAI,CAACG,YAAY,CAACC,OAAb,CAAqBZ,UAAU,CAACa,WAAhC,CAAxB,EAAsE;AACpE,0BACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAEZ,IAAI,CAACa,KAAjB;AAAwBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAA/B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;AAED,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAeR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANF;;AA0BA,eAAeP,QAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { STORAGEKEY } from '../Constant/index';\r\nimport { constants as PATH } from '../Constant/ComponentPath';\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  isAuthProtected,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (isAuthProtected && !localStorage.getItem(STORAGEKEY.ACCESSTOKEN)) {\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: PATH.LOGIN, state: { from: props.location } }}\r\n          />\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AppRoute;\r\n"]},"metadata":{},"sourceType":"module"}
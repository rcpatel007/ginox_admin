{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE DATA\\\\diamond\\\\diamond_admin_frontend\\\\src\\\\components\\\\CommonForBoth\\\\Rightbar.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { hideRightSidebar, changeLayout, changeLayoutWidth, changeSidebarTheme, changeSidebarType, changePreloader, changeTopbarTheme } from \"../../store/actions\";\nimport \"./rightbar.scss\";\n\nclass RightSidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeThemePreloader = () => {\n      this.props.changePreloader(!this.props.isPreloader);\n    };\n\n    this.state = {\n      layoutType: this.props.layoutType,\n      sidebarType: this.props.leftSideBarType,\n      layoutWidth: this.props.layoutWidth,\n      sidebarTheme: this.props.leftSideBarTheme,\n      topbarTheme: this.props.topbarTheme\n    };\n    this.hideRightbar = this.hideRightbar.bind(this);\n    this.changeLayout = this.changeLayout.bind(this);\n    this.changeLayoutWidth = this.changeLayoutWidth.bind(this);\n    this.changeLeftSidebarTheme = this.changeLeftSidebarTheme.bind(this);\n    this.changeLeftSidebarType = this.changeLeftSidebarType.bind(this);\n    this.changeTopbarTheme = this.changeTopbarTheme.bind(this);\n    this.changeThemePreloader = this.changeThemePreloader.bind(this);\n  }\n  /**\r\n   * Hides the right sidebar\r\n   */\n\n\n  hideRightbar(e) {\n    e.preventDefault();\n    this.props.hideRightSidebar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        layoutType: this.props.layoutType,\n        sidebarType: this.props.leftSideBarType,\n        layoutWidth: this.props.layoutWidth,\n        sidebarTheme: this.props.leftSideBarTheme,\n        topbarTheme: this.props.topbarTheme\n      });\n    }\n  }\n\n  /**\r\n   * Change the layout\r\n   * @param {*} e\r\n   */\n  changeLayout(e) {\n    if (e.target.checked) {\n      this.props.changeLayout(e.target.value);\n    }\n  }\n  /**\r\n   * Changes layout width\r\n   * @param {*} e\r\n   */\n\n\n  changeLayoutWidth(e) {\n    if (e.target.checked) {\n      this.props.changeLayoutWidth(e.target.value);\n    }\n  } // change left sidebar design\n\n\n  changeLeftSidebarType(e) {\n    if (e.target.checked) {\n      this.props.changeSidebarType(e.target.value);\n    }\n  } // change left sidebar theme\n\n\n  changeLeftSidebarTheme(e) {\n    if (e.target.checked) {\n      this.props.changeSidebarTheme(e.target.value);\n    }\n  } // change topbar theme\n\n\n  changeTopbarTheme(e) {\n    if (e.target.checked) {\n      this.props.changeTopbarTheme(e.target.value);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return { ...state.Layout\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  hideRightSidebar,\n  changeLayout,\n  changeSidebarTheme,\n  changeSidebarType,\n  changeLayoutWidth,\n  changeTopbarTheme,\n  changePreloader\n})(RightSidebar);","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/components/CommonForBoth/Rightbar.js"],"names":["React","Component","connect","hideRightSidebar","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","changePreloader","changeTopbarTheme","RightSidebar","constructor","props","changeThemePreloader","isPreloader","state","layoutType","sidebarType","leftSideBarType","layoutWidth","sidebarTheme","leftSideBarTheme","topbarTheme","hideRightbar","bind","changeLeftSidebarTheme","changeLeftSidebarType","e","preventDefault","componentDidUpdate","prevProps","setState","target","checked","value","render","mapStatetoProps","Layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  hideRightSidebar,\r\n  changeLayout,\r\n  changeLayoutWidth,\r\n  changeSidebarTheme,\r\n  changeSidebarType,\r\n  changePreloader,\r\n  changeTopbarTheme,\r\n} from \"../../store/actions\";\r\n\r\n\r\nimport \"./rightbar.scss\";\r\n\r\nclass RightSidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      layoutType: this.props.layoutType,\r\n      sidebarType: this.props.leftSideBarType,\r\n      layoutWidth: this.props.layoutWidth,\r\n      sidebarTheme: this.props.leftSideBarTheme,\r\n      topbarTheme: this.props.topbarTheme,\r\n    };\r\n    this.hideRightbar = this.hideRightbar.bind(this);\r\n    this.changeLayout = this.changeLayout.bind(this);\r\n    this.changeLayoutWidth = this.changeLayoutWidth.bind(this);\r\n    this.changeLeftSidebarTheme = this.changeLeftSidebarTheme.bind(this);\r\n    this.changeLeftSidebarType = this.changeLeftSidebarType.bind(this);\r\n    this.changeTopbarTheme = this.changeTopbarTheme.bind(this);\r\n    this.changeThemePreloader = this.changeThemePreloader.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Hides the right sidebar\r\n   */\r\n  hideRightbar(e) {\r\n    e.preventDefault();\r\n    this.props.hideRightSidebar();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps !== this.props) {\r\n      this.setState({\r\n        layoutType: this.props.layoutType,\r\n        sidebarType: this.props.leftSideBarType,\r\n        layoutWidth: this.props.layoutWidth,\r\n        sidebarTheme: this.props.leftSideBarTheme,\r\n        topbarTheme: this.props.topbarTheme,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeThemePreloader = () => {\r\n    this.props.changePreloader(!this.props.isPreloader);\r\n  };\r\n  /**\r\n   * Change the layout\r\n   * @param {*} e\r\n   */\r\n  changeLayout(e) {\r\n    if (e.target.checked) {\r\n      this.props.changeLayout(e.target.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes layout width\r\n   * @param {*} e\r\n   */\r\n  changeLayoutWidth(e) {\r\n    if (e.target.checked) {\r\n      this.props.changeLayoutWidth(e.target.value);\r\n    }\r\n  }\r\n\r\n  // change left sidebar design\r\n  changeLeftSidebarType(e) {\r\n    if (e.target.checked) {\r\n      this.props.changeSidebarType(e.target.value);\r\n    }\r\n  }\r\n\r\n  // change left sidebar theme\r\n  changeLeftSidebarTheme(e) {\r\n    if (e.target.checked) {\r\n      this.props.changeSidebarTheme(e.target.value);\r\n    }\r\n  }\r\n\r\n  // change topbar theme\r\n  changeTopbarTheme(e) {\r\n    if (e.target.checked) {\r\n      this.props.changeTopbarTheme(e.target.value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return { ...state.Layout };\r\n};\r\n\r\nexport default connect(mapStatetoProps, {\r\n  hideRightSidebar,\r\n  changeLayout,\r\n  changeSidebarTheme,\r\n  changeSidebarType,\r\n  changeLayoutWidth,\r\n  changeTopbarTheme,\r\n  changePreloader,\r\n})(RightSidebar);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE DATA\\\\diamond\\\\diamond_admin_frontend\\\\src\\\\components\\\\Custom\\\\TextInput.js\";\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport './inputcss.scss';\n\nfunction TextInput({\n  type = 'text',\n  values,\n  name,\n  placeholder,\n  errors,\n  touched,\n  handleChange,\n  isPassword,\n  isIcon = true,\n  iconName,\n  min = '0',\n  max\n}) {\n  const isError = errors[name] && touched[name];\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"has-wrapper mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, isIcon && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: iconName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    value: values[name],\n    name: name,\n    className: `login-input pr-3 mt-3 ${isError ? 'border-danger' : ''}`,\n    placeholder: placeholder,\n    onChange: handleChange,\n    autoComplete: \"off\",\n    type: showPassword ? 'text' : type,\n    min: min,\n    max: max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), isPassword && showPassword && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-icon\",\n    style: {\n      top: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-eye-fill\",\n    onClick: () => setShowPassword(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), isPassword && !showPassword && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-icon\",\n    style: {\n      top: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ri-eye-off-fill\",\n    onClick: () => setShowPassword(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), isError && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 14\n    },\n    className: \"text-left mt-1 text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, errors[name]));\n}\n\nexport default TextInput;","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/components/Custom/TextInput.js"],"names":["React","useState","Input","TextInput","type","values","name","placeholder","errors","touched","handleChange","isPassword","isIcon","iconName","min","max","isError","showPassword","setShowPassword","top","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,IAAI,GAAG,MADU;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,IAHiB;AAIjBC,EAAAA,WAJiB;AAKjBC,EAAAA,MALiB;AAMjBC,EAAAA,OANiB;AAOjBC,EAAAA,YAPiB;AAQjBC,EAAAA,UARiB;AASjBC,EAAAA,MAAM,GAAG,IATQ;AAUjBC,EAAAA,QAViB;AAWjBC,EAAAA,GAAG,GAAG,GAXW;AAYjBC,EAAAA;AAZiB,CAAnB,EAaG;AACD,QAAMC,OAAO,GAAGR,MAAM,CAACF,IAAD,CAAN,IAAgBG,OAAO,CAACH,IAAD,CAAvC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,MAAM,iBACL;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAEC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,eAOE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACC,IAAD,CADf;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,SAAS,EAAG,yBAAwBU,OAAO,GAAG,eAAH,GAAqB,EAAG,EAHrE;AAIE,IAAA,WAAW,EAAET,WAJf;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAME,IAAA,YAAY,EAAC,KANf;AAOE,IAAA,IAAI,EAAEO,YAAY,GAAG,MAAH,GAAYb,IAPhC;AAQE,IAAA,GAAG,EAAEU,GARP;AASE,IAAA,GAAG,EAAEC,GATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAmBGJ,UAAU,IAAIM,YAAd,iBACC;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAE;AAAEE,MAAAA,GAAG,EAAE;AAAP,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,IAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBJ,EAyBGP,UAAU,IAAI,CAACM,YAAf,iBACC;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAE;AAAEE,MAAAA,GAAG,EAAE;AAAP,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,IAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BJ,EAkCGF,OAAO,iBACN;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAA8B,IAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACF,IAAD,CADT,CAnCJ,CADF;AA0CD;;AAED,eAAeH,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Input } from 'reactstrap';\r\nimport './inputcss.scss';\r\n\r\nfunction TextInput({\r\n  type = 'text',\r\n  values,\r\n  name,\r\n  placeholder,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  isPassword,\r\n  isIcon = true,\r\n  iconName,\r\n  min = '0',\r\n  max,\r\n}) {\r\n  const isError = errors[name] && touched[name];\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  return (\r\n    <div className='has-wrapper mb-20'>\r\n      {isIcon && (\r\n        <span className='has-icon'>\r\n          <i className={iconName}></i>\r\n        </span>\r\n      )}\r\n\r\n      <Input\r\n        value={values[name]}\r\n        name={name}\r\n        className={`login-input pr-3 mt-3 ${isError ? 'border-danger' : ''}`}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        autoComplete='off'\r\n        type={showPassword ? 'text' : type}\r\n        min={min}\r\n        max={max}\r\n      />\r\n\r\n      {isPassword && showPassword && (\r\n        <span className='has-icon' style={{ top: '4px' }}>\r\n          <i className='ri-eye-fill' onClick={() => setShowPassword(false)}></i>\r\n        </span>\r\n      )}\r\n\r\n      {isPassword && !showPassword && (\r\n        <span className='has-icon' style={{ top: '4px' }}>\r\n          <i\r\n            className='ri-eye-off-fill'\r\n            onClick={() => setShowPassword(true)}\r\n          ></i>\r\n        </span>\r\n      )}\r\n\r\n      {isError && (\r\n        <div style={{ fontSize: 14 }} className='text-left mt-1 text-danger'>\r\n          {errors[name]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n"]},"metadata":{},"sourceType":"module"}
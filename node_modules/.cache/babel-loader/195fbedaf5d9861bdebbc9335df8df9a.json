{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE DATA\\\\diamond\\\\diamond_admin_frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes\n\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\";\nimport AppRoute from \"./routes/route\"; // layouts\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./theme.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLayout = () => {\n      let layoutCls = VerticalLayout;\n\n      switch (this.props.layout.layoutType) {\n        default:\n          layoutCls = VerticalLayout;\n          break;\n      }\n\n      return layoutCls;\n    };\n\n    this.state = {};\n    this.getLayout = this.getLayout.bind(this);\n  }\n  /**\r\n   * Returns the layout\r\n   */\n\n\n  render() {\n    const Layout = this.getLayout();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, publicRoutes.map((route, idx) => /*#__PURE__*/React.createElement(AppRoute, {\n      path: route.path,\n      layout: NonAuthLayout,\n      component: route.component,\n      key: idx,\n      isAuthProtected: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), authProtectedRoutes.map((route, idx) => /*#__PURE__*/React.createElement(AppRoute, {\n      path: route.path,\n      layout: Layout,\n      component: route.component,\n      key: idx,\n      isAuthProtected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["D:/CODE DATA/diamond/diamond_admin_frontend/src/App.js"],"names":["React","Component","Switch","BrowserRouter","Router","connect","authProtectedRoutes","publicRoutes","AppRoute","VerticalLayout","NonAuthLayout","App","constructor","props","getLayout","layoutCls","layout","layoutType","state","bind","render","Layout","map","route","idx","path","component","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,WAAlD;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;AACA,OAAO,cAAP;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,SATmB,GASP,MAAM;AAChB,UAAIC,SAAS,GAAGN,cAAhB;;AAEA,cAAQ,KAAKI,KAAL,CAAWG,MAAX,CAAkBC,UAA1B;AACE;AACEF,UAAAA,SAAS,GAAGN,cAAZ;AACA;AAHJ;;AAKA,aAAOM,SAAP;AACD,KAlBkB;;AAEjB,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACD;AAED;;;;;AAcAC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKP,SAAL,EAAf;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,YAAY,CAACe,GAAb,CAAiB,CAACC,KAAD,EAAQC,GAAR,kBAChB,oBAAC,QAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,MAAA,MAAM,EAAEf,aAFV;AAGE,MAAA,SAAS,EAAEa,KAAK,CAACG,SAHnB;AAIE,MAAA,GAAG,EAAEF,GAJP;AAKE,MAAA,eAAe,EAAE,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAWGlB,mBAAmB,CAACgB,GAApB,CAAwB,CAACC,KAAD,EAAQC,GAAR,kBACvB,oBAAC,QAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,MAAA,MAAM,EAAEJ,MAFV;AAGE,MAAA,SAAS,EAAEE,KAAK,CAACG,SAHnB;AAIE,MAAA,GAAG,EAAEF,GAJP;AAKE,MAAA,eAAe,EAAE,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAXH,CADF,CADF,CADF;AA2BD;;AAnDyB;;AAsD5B,MAAMG,eAAe,GAAIT,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACG;AADT,GAAP;AAGD,CAJD;;AAMA,eAAehB,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,GAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import Routes\r\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\";\r\nimport AppRoute from \"./routes/route\";\r\n\r\n// layouts\r\nimport VerticalLayout from \"./components/VerticalLayout/\";\r\n\r\nimport NonAuthLayout from \"./components/NonAuthLayout\";\r\n\r\n// Import scss\r\nimport \"./theme.scss\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.getLayout = this.getLayout.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns the layout\r\n   */\r\n  getLayout = () => {\r\n    let layoutCls = VerticalLayout;\r\n\r\n    switch (this.props.layout.layoutType) {\r\n      default:\r\n        layoutCls = VerticalLayout;\r\n        break;\r\n    }\r\n    return layoutCls;\r\n  };\r\n\r\n  render() {\r\n    const Layout = this.getLayout();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Switch>\r\n            {publicRoutes.map((route, idx) => (\r\n              <AppRoute\r\n                path={route.path}\r\n                layout={NonAuthLayout}\r\n                component={route.component}\r\n                key={idx}\r\n                isAuthProtected={false}\r\n              />\r\n            ))}\r\n\r\n            {authProtectedRoutes.map((route, idx) => (\r\n              <AppRoute\r\n                path={route.path}\r\n                layout={Layout}\r\n                component={route.component}\r\n                key={idx}\r\n                isAuthProtected={true}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    layout: state.Layout,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n"]},"metadata":{},"sourceType":"module"}